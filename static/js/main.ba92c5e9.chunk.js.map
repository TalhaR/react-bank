{"version":3,"sources":["pages/Home.jsx","components/Card.jsx","components/AccountBalanceCard.jsx","components/InputCard.jsx","pages/DebitsPage.jsx","pages/CreditsPage.jsx","App.js","index.js"],"names":["Home","className","style","height","src","alt","to","type","padding","fontSize","Card","description","amount","date","AccountBalanceCard","InputCard","handleSubmit","handleDescriptionChange","handleAmountChange","onSubmit","name","onChange","value","axios","require","DebitsPage","useState","debits","setDebits","credits","setCredits","descriptionField","setDescriptionField","amountField","setAmountField","useEffect","document","title","getDebits","a","get","res","data","getCredits","display","justifyContent","textAlign","sum","temp","map","credit","i","length","Number","Math","round","debit","generateAccountBalance","e","preventDefault","newDate","Date","toJSON","arr","push","id","target","substring","CreditsPage","App","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba92c5e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"App-header\" style={{ height: \"100vh\" }}>\r\n            <img\r\n                // This image-link doesn't work so we provided our own\r\n                // src=\"https://letstalkpayments.com/wp-content/uploads/2016/04/Bank.png\"\r\n                src=\"https://media.istockphoto.com/vectors/bank-building-isolated-on-white-background-vector-illustration-flat-vector-id900791430?k=6&m=900791430&s=612x612&w=0&h=i8p6EfGRaDb86Z5dyGgURWVi--2KFYuoVjNJUHnrChk=\"\r\n                alt=\"bank\"\r\n            />\r\n            <h1>Bank of React</h1>\r\n            <Link to=\"/credits\">\r\n                <button\r\n                    type=\"button\"\r\n                    style={{ padding: \"10px 10px\", fontSize: \"16px\" }}\r\n                >\r\n                    Credits Page\r\n                </button>\r\n            </Link>\r\n\r\n            <Link to=\"/debits\">\r\n                <button\r\n                    type=\"button\"\r\n                    style={{ padding: \"10px 10px\", fontSize: \"16px\" }}\r\n                >\r\n                    Debits Page\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ type, description, amount, date }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"cardHeader\">\r\n                <h2> {description} </h2>\r\n            </div>\r\n            <div>\r\n                <h5>\r\n                    {type} amount: {amount}\r\n                </h5>\r\n                <h5>Date: {date}</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react'\r\n\r\nconst AccountBalanceCard = ({amount}) => {\r\n  return (\r\n    <div className=\"card2\">\r\n      <div className=\"cardHeader\">\r\n        <h1> Account Balance </h1>\r\n      </div>\r\n      <div>\r\n        <h5> Current Balance: {amount} </h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountBalanceCard","import React from 'react'\r\n\r\nconst InputCard = ({ type, handleSubmit, handleDescriptionChange, handleAmountChange }) => {\r\n  return (\r\n      <div className=\"card\">\r\n          <form onSubmit={handleSubmit}>\r\n              <div className=\"cardHeader\">\r\n                  <h2>\r\n                      <label>\r\n                          Description:{\" \"}\r\n                          <input\r\n                              type=\"text\"\r\n                              name=\"description\"\r\n                              onChange={handleDescriptionChange}\r\n                          />\r\n                      </label>\r\n                  </h2>\r\n              </div>\r\n\r\n              <div>\r\n                  <h5>\r\n                      <label>\r\n                          {type} amount:{\" \"}\r\n                          <input\r\n                              type=\"text\"\r\n                              name=\"amount\"\r\n                              onChange={handleAmountChange}\r\n                          />\r\n                      </label>\r\n                  </h5>\r\n                  <input type=\"submit\" value=\"Submit\" />\r\n              </div>\r\n          </form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default InputCard\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../components/Card\";\r\nimport AccountBalanceCard from \"../components/AccountBalanceCard\";\r\nimport InputCard from \"../components/InputCard\";\r\nimport { Link } from \"react-router-dom\";\r\nconst axios = require(\"axios\");\r\n\r\nconst DebitsPage = () => {\r\n    const [debits, setDebits] = useState([]);\r\n    const [credits, setCredits] = useState([]);\r\n    const [descriptionField, setDescriptionField] = useState(\"\");\r\n    const [amountField, setAmountField] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        document.title = \"Debits\"; // sets the title of the page to Debits\r\n\r\n        const getDebits = async () => {\r\n            // call the api whenever the page loads and store data in debits\r\n            let res = await axios.get(\"https://moj-api.herokuapp.com/debits\");\r\n            setDebits(res.data);\r\n        };\r\n\r\n        const getCredits = async () => {\r\n            // call the api whenever the page loads and store data in credits\r\n            let res = await axios.get(\"https://moj-api.herokuapp.com/credits\");\r\n            setCredits(res.data);\r\n        };\r\n\r\n        getCredits();\r\n        getDebits();\r\n    }, []);\r\n\r\n    const generateDebits = () => {\r\n        // generate a list of cards for the page to display\r\n        return debits.map((debit) => {\r\n            return (\r\n                <Card\r\n                    type=\"Debit\"\r\n                    key={debit.id}\r\n                    description={debit.description}\r\n                    amount={debit.amount}\r\n                    date={debit.date.substring(0, 10)}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        // handles submissions\r\n        e.preventDefault();\r\n        let newDate = new Date();\r\n        newDate = newDate.toJSON();\r\n        let arr = [...debits];\r\n        arr.push({\r\n            amount: amountField,\r\n            date: newDate,\r\n            description: descriptionField,\r\n            id: newDate,\r\n        });\r\n        setDebits(arr);\r\n    };\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        // changes state when user inputs descriptions\r\n        setDescriptionField(e.target.value);\r\n    };\r\n\r\n    const handleAmountChange = (e) => {\r\n        // changes state when user inputs descriptions\r\n        setAmountField(e.target.value);\r\n    };\r\n\r\n    const generateAccountBalance = () => {\r\n        let sum = 0;\r\n        let val = 0.0;\r\n\r\n        let temp = credits.map((credit) => {\r\n            return credit.amount;\r\n        });\r\n\r\n        for (let i = 0; i < temp.length; i++) {\r\n            val = Number(temp[i]);\r\n            sum += val;\r\n            sum = Math.round(sum * 100) / 100;\r\n        }\r\n\r\n        temp = debits.map((debit) => {\r\n            return debit.amount;\r\n        });\r\n\r\n        for (let i = 0; i < temp.length; i++) {\r\n            val = Number(temp[i]);\r\n            sum -= val;\r\n            sum = Math.round(sum * 100) / 100;\r\n        }\r\n\r\n        return <AccountBalanceCard amount={sum} />;\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h2>Debits Page</h2>\r\n            </header>\r\n            <Link to=\"/\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <button\r\n                    type=\"button\"\r\n                    style={{ padding: \"10px 10px\", fontSize: \"16px\" }}\r\n                >\r\n                    Home\r\n                </button>\r\n            </Link>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                {generateAccountBalance()}\r\n                <InputCard\r\n                    type=\"Debit\"\r\n                    handleSubmit={handleSubmit}\r\n                    handleDescriptionChange={handleDescriptionChange}\r\n                    handleAmountChange={handleAmountChange}\r\n                />\r\n                {generateDebits()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DebitsPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../components/Card\";\r\nimport AccountBalanceCard from \"../components/AccountBalanceCard\";\r\nimport InputCard from \"../components/InputCard\";\r\nimport { Link } from \"react-router-dom\";\r\nconst axios = require(\"axios\");\r\n\r\nconst CreditsPage = () => {\r\n    const [credits, setCredits] = useState([]);\r\n    const [debits, setDebits] = useState([]);\r\n    const [descriptionField, setDescriptionField] = useState(\"\");\r\n    const [amountField, setAmountField] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        document.title = \"Credits\"; // sets the title of the page to Credit\r\n\r\n        const getCredits = async () => {\r\n            // call the api whenever the page loads and store data in credits\r\n            let res = await axios.get(\"https://moj-api.herokuapp.com/credits\");\r\n            setCredits(res.data);\r\n        };\r\n\r\n        const getDebits = async () => {\r\n            // call the api whenever the page loads and store data in debits\r\n            let res = await axios.get(\"https://moj-api.herokuapp.com/debits\");\r\n            setDebits(res.data);\r\n        };\r\n\r\n        getDebits();\r\n        getCredits();\r\n    }, []);\r\n\r\n    const generateCredits = () => {\r\n        // generate a list of cards for the page to display\r\n        return credits.map((credit) => {\r\n            return (\r\n                <Card\r\n                    type=\"Credit\"\r\n                    key={credit.id}\r\n                    description={credit.description}\r\n                    amount={credit.amount}\r\n                    date={credit.date.substring(0, 10)}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        // handles submissions\r\n        e.preventDefault();\r\n        let newDate = new Date();\r\n        newDate = newDate.toJSON();\r\n        let arr = [...credits];\r\n        // if user has enough credits\r\n        arr.push({\r\n            amount: amountField,\r\n            date: newDate,\r\n            description: descriptionField,\r\n            id: newDate,\r\n        });\r\n        setCredits(arr);\r\n    };\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        // changes state when user inputs descriptions\r\n        setDescriptionField(e.target.value);\r\n    };\r\n\r\n    const handleAmountChange = (e) => {\r\n        // changes state when user inputs descriptions\r\n        setAmountField(e.target.value);\r\n    };\r\n\r\n    const generateAccountBalance = () => {\r\n        let sum = 0;\r\n        let val = 0.0;\r\n\r\n        let temp = credits.map((credit) => {\r\n            return credit.amount;\r\n        });\r\n\r\n        for (let i = 0; i < temp.length; i++) {\r\n            val = Number(temp[i]);\r\n            sum += val;\r\n            sum = Math.round(sum * 100) / 100;\r\n        }\r\n\r\n        temp = debits.map((debit) => {\r\n            return debit.amount;\r\n        });\r\n\r\n        for (let i = 0; i < temp.length; i++) {\r\n            val = Number(temp[i]);\r\n            sum -= val;\r\n            sum = Math.round(sum * 100) / 100;\r\n        }\r\n\r\n        return <AccountBalanceCard amount={sum} />;\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h2>Credits Page</h2>\r\n            </header>\r\n            <Link to=\"/\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <button\r\n                    type=\"button\"\r\n                    style={{ padding: \"10px 10px\", fontSize: \"16px\" }}\r\n                >\r\n                    Home\r\n                </button>\r\n            </Link>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                {generateAccountBalance()}\r\n                <InputCard\r\n                    type=\"Credit\"\r\n                    handleSubmit={handleSubmit}\r\n                    handleDescriptionChange={handleDescriptionChange}\r\n                    handleAmountChange={handleAmountChange}\r\n                />\r\n                {generateCredits()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreditsPage;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/Home'\r\nimport DebitsPage from './pages/DebitsPage';\r\nimport CreditsPage from './pages/CreditsPage';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/credits\" component={CreditsPage} />\r\n        <Route path=\"/debits\" component={DebitsPage} />\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}